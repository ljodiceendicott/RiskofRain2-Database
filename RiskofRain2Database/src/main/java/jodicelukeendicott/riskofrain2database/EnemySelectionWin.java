/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jodicelukeendicott.riskofrain2database;

import java.io.FileNotFoundException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import static jodicelukeendicott.riskofrain2database.Main.mmw;

/**
 *
 * @author lukej
 */
public class EnemySelectionWin extends javax.swing.JFrame {
    private DefaultListModel<Enemy> dlm;
    private ArrayList<Enemy> enemyal;
    private int idx = -1;
    /**
     * Creates new form EnemySelectionWin
     */
 
    public EnemySelectionWin() {
        
    dlm = new DefaultListModel<>();
    enemyal = new ArrayList<>();
    
    initComponents();
    //String size,String name,String health, String healthregen,String damage, String speed, String armor, String info1, String info2, String fact)
      try{
            ReadFiles rf = new ReadFiles();
           enemyal = rf.readEnemy();
        } catch (FileNotFoundException ex) {
          System.out.println("Error:"+ex);
        }
        
          enemyal.forEach(e -> {
              dlm.addElement(e);
                    }); 
   
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnBacktoMenu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jbtntglAll = new javax.swing.JToggleButton();
        jbtntglSm = new javax.swing.JToggleButton();
        jbtntglMd = new javax.swing.JToggleButton();
        jbtntglLg = new javax.swing.JToggleButton();
        jbtntglSBoss = new javax.swing.JToggleButton();
        jbtntglBoss = new javax.swing.JToggleButton();
        btngetMonsInfo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        exporttojson = new javax.swing.JMenuItem();
        exporttotxt = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menutoRuns = new javax.swing.JMenuItem();
        menutoItem = new javax.swing.JMenuItem();
        menutoSurv = new javax.swing.JMenuItem();

        jList1.setModel(dlm);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        btnBacktoMenu.setText("Back to Menu");
        btnBacktoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktoMenuActionPerformed(evt);
            }
        });

        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbtntglAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtntglAll.setText("All Enemies");
        jbtntglAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglAllActionPerformed(evt);
            }
        });

        jbtntglSm.setText("Small Enemies");
        jbtntglSm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglSmActionPerformed(evt);
            }
        });

        jbtntglMd.setText("Medium Enemies");
        jbtntglMd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglMdActionPerformed(evt);
            }
        });

        jbtntglLg.setText("Large Enemies");
        jbtntglLg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglLgActionPerformed(evt);
            }
        });

        jbtntglSBoss.setText("Side-Bosses");
        jbtntglSBoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglSBossActionPerformed(evt);
            }
        });

        jbtntglBoss.setText("Bosses");
        jbtntglBoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntglBossActionPerformed(evt);
            }
        });

        btngetMonsInfo.setText("Get Monster Info");
        btngetMonsInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngetMonsInfoActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenu4.setText("Export As..");

        exporttojson.setText(".Json File");
        exporttojson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exporttojsonActionPerformed(evt);
            }
        });
        jMenu4.add(exporttojson);

        exporttotxt.setText(".txt File");
        exporttotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exporttotxtActionPerformed(evt);
            }
        });
        jMenu4.add(exporttotxt);

        jMenu1.add(jMenu4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Navigate");

        jMenu3.setText("Go To");

        menutoRuns.setText("Run Log");
        menutoRuns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menutoRunsActionPerformed(evt);
            }
        });
        jMenu3.add(menutoRuns);

        menutoItem.setText("Item Database");
        menutoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menutoItemActionPerformed(evt);
            }
        });
        jMenu3.add(menutoItem);

        menutoSurv.setText("Survivor Database");
        menutoSurv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menutoSurvActionPerformed(evt);
            }
        });
        jMenu3.add(menutoSurv);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btngetMonsInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBacktoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtntglAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jbtntglBoss, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jbtntglSBoss, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtntglMd, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(jbtntglSm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtntglLg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtntglAll, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jbtntglSm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtntglMd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtntglLg, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtntglSBoss, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtntglBoss, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btngetMonsInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBacktoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 44, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBacktoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktoMenuActionPerformed
        this.setVisible(false);
        mmw.setVisible(true);
    }//GEN-LAST:event_btnBacktoMenuActionPerformed

    private void jbtntglAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglAllActionPerformed
        dlm.clear();
        enemyal.forEach(e -> {
              dlm.addElement(e);
        });
        this.fixButtonState(jbtntglAll);
    }//GEN-LAST:event_jbtntglAllActionPerformed

    private void btngetMonsInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngetMonsInfoActionPerformed
        if(idx>-1){
            EnemyWin ew = new EnemyWin(dlm.get(idx));
            ew.setVisible(true);  
        }
        else{
            JOptionPane.showMessageDialog(null, "You need to select an item in the DefaultListModel");
        }
      
    }//GEN-LAST:event_btngetMonsInfoActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        if(evt.getValueIsAdjusting()){
              idx = evt.getLastIndex();
               btngetMonsInfo.setEnabled(true);
          }
    }//GEN-LAST:event_jList1ValueChanged

    private void jbtntglSmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglSmActionPerformed
       this.changeWin("small",jbtntglSm);
    }//GEN-LAST:event_jbtntglSmActionPerformed

    private void jbtntglMdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglMdActionPerformed
        this.changeWin("medium",jbtntglMd);
    }//GEN-LAST:event_jbtntglMdActionPerformed

    private void jbtntglLgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglLgActionPerformed
        this.changeWin("large",jbtntglLg);
    }//GEN-LAST:event_jbtntglLgActionPerformed

    private void jbtntglSBossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglSBossActionPerformed
        this.changeWin("side boss",jbtntglSBoss);
    }//GEN-LAST:event_jbtntglSBossActionPerformed

    private void jbtntglBossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntglBossActionPerformed
        this.changeWin("boss",jbtntglBoss);
    }//GEN-LAST:event_jbtntglBossActionPerformed

    private void menutoRunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menutoRunsActionPerformed
       this.setVisible(false);
        RunLogWin  runs =new RunLogWin();
        runs.setVisible(true);
    }//GEN-LAST:event_menutoRunsActionPerformed

    private void menutoSurvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menutoSurvActionPerformed
         this.setVisible(false);
        SurvivorSelectionWin survwin = new SurvivorSelectionWin();
        survwin.setVisible(true);
    }//GEN-LAST:event_menutoSurvActionPerformed

    private void menutoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menutoItemActionPerformed
        this.setVisible(false);
        GameItemSelectionWin itmwin = new GameItemSelectionWin();
        itmwin.setVisible(true);
    }//GEN-LAST:event_menutoItemActionPerformed

    private void exporttojsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exporttojsonActionPerformed
        if(dlm.size()==0){
         JOptionPane.showMessageDialog(null, "There is nothing to export");
      }
      else{
        WriteFiles.printEnemy(dlm,1);
        }
    }//GEN-LAST:event_exporttojsonActionPerformed

    private void exporttotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exporttotxtActionPerformed
         if(dlm.size()==0){
         JOptionPane.showMessageDialog(null, "There is nothing to export");
      }
      else{
        WriteFiles.printEnemy(dlm,2);
      }
    }//GEN-LAST:event_exporttotxtActionPerformed
    private void addtodlm(String size){
        dlm.clear();
        if(jbtntglAll.isSelected()){
        jbtntglAll.setSelected(false);
        jbtntglAll.setEnabled(true);
        }
        enemyal.forEach(itm-> {
         if(itm.getSize().equals(size)){
             dlm.addElement(itm);
         }
    });
    }
    private void fixButtonState(JToggleButton b){
        jbtntglAll.setSelected(false);
        jbtntglSm.setSelected(false);
        jbtntglMd.setSelected(false);
        jbtntglLg.setSelected(false);
        jbtntglSBoss.setSelected(false);
        jbtntglBoss.setSelected(false);
        b.setSelected(true);
    }
    private void changeWin(String etype,JToggleButton tglb){
        this.addtodlm(etype);
        this.fixButtonState(tglb);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnemySelectionWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnemySelectionWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnemySelectionWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnemySelectionWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnemySelectionWin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBacktoMenu;
    private javax.swing.JButton btngetMonsInfo;
    private javax.swing.JMenuItem exporttojson;
    private javax.swing.JMenuItem exporttotxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<Enemy> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jbtntglAll;
    private javax.swing.JToggleButton jbtntglBoss;
    private javax.swing.JToggleButton jbtntglLg;
    private javax.swing.JToggleButton jbtntglMd;
    private javax.swing.JToggleButton jbtntglSBoss;
    private javax.swing.JToggleButton jbtntglSm;
    private javax.swing.JMenuItem menutoItem;
    private javax.swing.JMenuItem menutoRuns;
    private javax.swing.JMenuItem menutoSurv;
    // End of variables declaration//GEN-END:variables
}
